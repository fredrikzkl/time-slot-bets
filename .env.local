SUPABASE_URL=https://whcquawjybdddbhvjdcs.supabase.co
SUPABASE_PUBLIC_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndoY3F1YXdqeWJkZGRiaHZqZGNzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjI5NDgxNTUsImV4cCI6MjAzODUyNDE1NX0.MOKhhRphv4BzbVeKcCwc15FsOOYKzj4481hX_hw9Z-Q

javascript
// Import the supabase client and fetch API
import { createClient } from '@supabase/supabase-js';

// Initialize the Supabase client with your API URL and API key
const supabase = createClient('YOUR_API_URL', 'YOUR_API_KEY');

// Define a function to handle the form submission
async function handleSubmit(event) {
  event.preventDefault();
  
  // Get the form data
  const formData = new FormData(event.target);
  const data = {
    // Map the form fields to the data structure expected by the Supabase API
    // Example: field1: formData.get("field1"),
    //          field2: formData.get("field2"),
  };
  
  // Make a POST request to add the data to the database
  const { data: newRecord, error } = await supabase.from('your_table_name').insert([data]);
  
  if (error) {
    console.error('Error adding data to the database:', error);
  } else {
    console.log('Data added to the database:', newRecord);
  }
}

// In your component's render method, add a form with fields for the data you want to add
function YourComponent() {
  return (
    <form onSubmit={handleSubmit}>
      {/* Add form fields here */}
      <input type="text" name="field1" />
      <input type="text" name="field2" />
      
      <button type="submit">Add to database</button>
    </form>
  );
}

export default YourComponent;